version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: cca_db
    environment:
      POSTGRES_DB: claude_code_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      # Initialize schema on first run
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d claude_code_analytics"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cca_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: claude_code_analytics
      DB_USER: postgres
      DB_PASSWORD: postgres
      CORS_ORIGINS: http://localhost:5174,http://localhost:3000,http://localhost:8080
    ports:
      - "3001:3001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3001/api/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cca_web
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  db_data:
